Workshop 4 - intro to Rx

v Iterable
    v pull model (MoveNext/Current of hasNext/next)
    v Scala operators on Iterable
    v Infinite collections
v Observable
    v push based
    v (OnNext)*(OnError|OnCompleted)?
    v Observable.just(...)
    v subscribe
        * Observer
        * 0-3 lambdas
        * geen subscribe == nothing happens!
    v subscription/unsubscribe
    v Observable.error/Observable.empty/Observable.never/Observable.from
    v Observable.apply/create
        *
        * think about unsubscribes, subscribe, etc.
    v Infinite-ness
    v RxJava vs RxScala
v Operators
    v Marble diagram
    v filter
    v map
    v foldLeft
    v scan
    v distinct/distinctUntilChanged
    v drop/dropWhile (skip in RxJava)
    v take/takeWhile
    v side effects with doOnNext/doOnError/doOnCompleted/doOnEach/...
    v retry
    v onErrorResumeNext
    v Example (fibonacci)
- Combining streams
    v concat
    v merge
    v flatMap
    v combineLatest
    v withLatestFrom
    v Example (login)
    + zipWith
v assignments:
    v skip every third element in an Observable
    v Pi approximation
    v DictionarySuggestion (combining streams, doing REST call, NO schedulers)
    v Rx ecosystem (discuss some related projects that add extra functionality)



Workshop 5 - Rx continued
- testing Observable
- hot vs cold Observable
    + Observable.just etc. are cold
    + Reactive source (mouse moves) is hot
    + implications for subscribing
        * no subscriptions
        * multiple subscriptions
    + publish operator
    + ...
- Subject
    + both Observer and Observable
    + PublishSubject/BehaviorSubject/...
- Schedulers
    + computation/newThread/IO/...
    + JavaFxScheduler
- Clocks and time-based operators
    + Observable.interval
    + Observable.timer
    + drop with duration
- ...
- use cases
- sorting with time?

